trigger:
  branches:
    include:
      - main  # Adjust if your default branch is different

pool:
  name: Default

variables:
  - group: terraform-hubspoke-grp
  - name: TF_VERSION
    value: '1.6.6'
  - name: backendServiceArm
    value: 'terraform-hubspoke-connection'
  - name: azureSubscription
    value: 'terraform-hubspoke-connection'

steps:
# Install Terraform
- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
  inputs:
    terraformVersion: $(TF_VERSION)

# Azure Login
- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "##[section]Verifying Azure CLI authentication..."
      az account show

# Terraform Init
- task: JasonBJohnson.azure-pipelines-tasks-terraform.terraform-task.TerraformTask@4
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: $(backendServiceArm)
    backendAzureRmResourceGroupName: 'PTutorial-rg'           # ✅ replace with correct backend RG
    backendAzureRmStorageAccountName: 'ptutorial123'          # ✅ replace with correct storage account
    backendAzureRmContainerName: 'ptstate'
    backendAzureRmKey: 'terraform.tfstate'

# Terraform Plan
- task: JasonBJohnson.azure-pipelines-tasks-terraform.terraform-task.TerraformTask@4
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: $(backendServiceArm)

# Terraform Apply
- task: JasonBJohnson.azure-pipelines-tasks-terraform.terraform-task.TerraformTask@4
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: $(backendServiceArm)
    args: '-auto-approve'
